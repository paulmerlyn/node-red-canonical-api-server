/**
 * Copyright JS Foundation and other contributors, http://js.foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/
!function(){function l(t){$.ajax({headers:{Accept:"application/json"},cache:!1,url:"icons",success:function(e){RED.nodes.setIconSets(e),t&&t()}})}function t(){$.ajax({headers:{Accept:"text/html"},cache:!1,url:"nodes",success:function(e){$("body").append(e),$("body").i18n(),$("#palette > .palette-spinner").hide(),$(".palette-scroll").removeClass("hide"),$("#palette-search").removeClass("hide"),a(function(){RED.settings.theme("projects.enabled",!1)?RED.projects.refresh(function(e){RED.sidebar.info.refresh(),e||(RED.menu.setDisabled("menu-item-projects-open",!0),RED.menu.setDisabled("menu-item-projects-settings",!0),!1===e||RED.projects.showStartup()),i()}):(RED.sidebar.info.refresh(),i())})}})}function a(i){$.ajax({headers:{Accept:"application/json"},cache:!1,url:"flows",success:function(e){if(e){var t=window.location.hash;RED.nodes.version(e.rev),RED.nodes.import(e.flows),RED.nodes.dirty(!1),RED.view.redraw(!0),/^#flow\/.+$/.test(t)&&RED.workspaces.show(t.substring(6))}i()}})}function i(){var s={};RED.comms.subscribe("notification/#",function(e,t){var i=e.split("/")[1];if("runtime-deploy"!==i&&"node"!==i){if("project-update"===i)return RED.nodes.clear(),RED.history.clear(),RED.view.redraw(!0),void RED.projects.refresh(function(){a(function(){var e={"change-branch":"Change to local branch '"+RED.projects.getActiveProject().git.branches.local+"'","merge-abort":"Git merge aborted",loaded:"Project '"+t.project+"' loaded",updated:"Project '"+t.project+"' updated",pull:"Project '"+t.project+"' reloaded",revert:"Project '"+t.project+"' reloaded","merge-complete":"Git merge completed"}[t.action];RED.notify("<p>"+e+"</p>"),RED.sidebar.info.refresh()})});if(t.text){t.default=t.text;var o=RED._(t.text,t),n={type:t.type,fixed:void 0===t.timeout,timeout:t.timeout,id:i};"runtime-state"===i&&("missing-types"===t.error?(o+="<ul><li>"+t.types.join("</li><li>")+"</li></ul>",RED.projects.getActiveProject()?n.buttons=[{text:"Manage project dependencies",click:function(){s[i].hideNotification(),RED.projects.settings.show("deps")}}]:n.buttons=[{text:"Close",click:function(){s[i].hideNotification()}}]):"credentials_load_failed"===t.error?RED.settings.theme("projects.enabled",!1)?RED.user.hasPermission("projects.write")&&(n.buttons=[{text:"Setup credentials",click:function(){s[i].hideNotification(),RED.projects.showCredentialsPrompt()}}]):n.buttons=[{text:"Close",click:function(){s[i].hideNotification()}}]:"missing_flow_file"===t.error?RED.user.hasPermission("projects.write")&&(n.buttons=[{text:"Setup project files",click:function(){s[i].hideNotification(),RED.projects.showFilesPrompt()}}]):"missing_package_file"===t.error?RED.user.hasPermission("projects.write")&&(n.buttons=[{text:"Create default package file",click:function(){s[i].hideNotification(),RED.projects.createDefaultPackageFile()}}]):"project_empty"===t.error?RED.user.hasPermission("projects.write")&&(n.buttons=[{text:"No thanks",click:function(){s[i].hideNotification()}},{text:"Create default project files",click:function(){s[i].hideNotification(),RED.projects.createDefaultFileSet()}}]):"git_merge_conflict"===t.error&&(RED.nodes.clear(),RED.sidebar.versionControl.refresh(!0),RED.user.hasPermission("projects.write")&&(n.buttons=[{text:"Show merge conflicts",click:function(){s[i].hideNotification(),RED.sidebar.versionControl.showLocalChanges()}}]))),s.hasOwnProperty(i)?s[i].update(o,n):s[i]=RED.notify(o,n)}else s.hasOwnProperty(i)&&(s[i].close(),delete s[i])}}),RED.comms.subscribe("status/#",function(e,t){var i=e.split("/"),o=RED.nodes.node(i[1]);o&&(t.hasOwnProperty("text")&&"."!==t.text[0]&&(t.text=o._(t.text.toString(),{defaultValue:t.text.toString()})),o.status=t,o.dirty=!0,RED.view.redraw())}),RED.comms.subscribe("notification/node/#",function(e,t){var i,o,n;if("notification/node/added"==e){var s=[];t.forEach(function(e){var t=e.id;RED.nodes.addNodeSet(e),s=s.concat(e.types),RED.i18n.loadCatalog(t,function(){$.get("nodes/"+t,function(e){$("body").append(e)})})}),s.length&&(n="<ul><li>"+s.join("</li><li>")+"</li></ul>",RED.notify(RED._("palette.event.nodeAdded",{count:s.length})+n,"success")),l()}else if("notification/node/removed"==e){for(i=0;i<t.length;i++)o=t[i],RED.nodes.removeNodeSet(o.id).added&&(n="<ul><li>"+o.types.join("</li><li>")+"</li></ul>",RED.notify(RED._("palette.event.nodeRemoved",{count:o.types.length})+n,"success"));l()}else"notification/node/enabled"==e?t.types&&(RED.nodes.getNodeSet(t.id).added?(RED.nodes.enableNodeSet(t.id),n="<ul><li>"+t.types.join("</li><li>")+"</li></ul>",RED.notify(RED._("palette.event.nodeEnabled",{count:t.types.length})+n,"success")):$.get("nodes/"+t.id,function(e){$("body").append(e),n="<ul><li>"+t.types.join("</li><li>")+"</li></ul>",RED.notify(RED._("palette.event.nodeAdded",{count:t.types.length})+n,"success")})):"notification/node/disabled"==e?t.types&&(RED.nodes.disableNodeSet(t.id),n="<ul><li>"+t.types.join("</li><li>")+"</li></ul>",RED.notify(RED._("palette.event.nodeDisabled",{count:t.types.length})+n,"success")):"node/upgraded"==e&&(RED.notify(RED._("palette.event.nodeUpgraded",{module:t.module,version:t.version}),"success"),RED.nodes.registry.setModulePendingUpdated(t.module,t.version));RED.library.loadFlowLibrary()})}function o(){$.get("red/about",function(e){RED.sidebar.info.set('<div style="text-align:center;"><img width="50px" src="red/images/node-red-icon.svg" /></div>'+marked(e)),RED.sidebar.info.show()})}function e(){var e=[];RED.settings.theme("projects.enabled",!1)&&e.push({id:"menu-item-projects-menu",label:"Projects",options:[{id:"menu-item-projects-new",label:"New",disabled:!1,onselect:"core:new-project"},{id:"menu-item-projects-open",label:"Open",disabled:!1,onselect:"core:open-project"},{id:"menu-item-projects-settings",label:"Project Settings",disabled:!1,onselect:"core:show-project-settings"}]}),e.push({id:"menu-item-view-menu",label:RED._("menu.label.view.view"),options:[{id:"menu-item-sidebar",label:RED._("menu.label.sidebar.show"),toggle:!0,onselect:"core:toggle-sidebar",selected:!0},null]}),e.push(null),e.push({id:"menu-item-import",label:RED._("menu.label.import"),options:[{id:"menu-item-import-clipboard",label:RED._("menu.label.clipboard"),onselect:"core:show-import-dialog"},{id:"menu-item-import-library",label:RED._("menu.label.library"),options:[]}]}),e.push({id:"menu-item-export",label:RED._("menu.label.export"),disabled:!0,options:[{id:"menu-item-export-clipboard",label:RED._("menu.label.clipboard"),disabled:!0,onselect:"core:show-export-dialog"},{id:"menu-item-export-library",label:RED._("menu.label.library"),disabled:!0,onselect:"core:library-export"}]}),e.push(null),e.push({id:"menu-item-search",label:RED._("menu.label.search"),onselect:"core:search"}),e.push(null),e.push({id:"menu-item-config-nodes",label:RED._("menu.label.displayConfig"),onselect:"core:show-config-tab"}),e.push({id:"menu-item-workspace",label:RED._("menu.label.flows"),options:[{id:"menu-item-workspace-add",label:RED._("menu.label.add"),onselect:"core:add-flow"},{id:"menu-item-workspace-edit",label:RED._("menu.label.rename"),onselect:"core:edit-flow"},{id:"menu-item-workspace-delete",label:RED._("menu.label.delete"),onselect:"core:remove-flow"}]}),e.push({id:"menu-item-subflow",label:RED._("menu.label.subflows"),options:[{id:"menu-item-subflow-create",label:RED._("menu.label.createSubflow"),onselect:"core:create-subflow"},{id:"menu-item-subflow-convert",label:RED._("menu.label.selectionToSubflow"),disabled:!0,onselect:"core:convert-to-subflow"}]}),e.push(null),!1!==RED.settings.theme("palette.editable")&&(e.push({id:"menu-item-edit-palette",label:RED._("menu.label.editPalette"),onselect:"core:manage-palette"}),e.push(null)),e.push({id:"menu-item-user-settings",label:RED._("menu.label.settings"),onselect:"core:show-user-settings"}),e.push(null),e.push({id:"menu-item-keyboard-shortcuts",label:RED._("menu.label.keyboardShortcuts"),onselect:"core:show-help"}),e.push({id:"menu-item-help",label:RED.settings.theme("menu.menu-item-help.label",RED._("menu.label.help")),href:RED.settings.theme("menu.menu-item-help.url","http://nodered.org/docs")}),e.push({id:"menu-item-node-red-version",label:"v"+RED.settings.version,onselect:"core:show-about"}),RED.view.init(),RED.userSettings.init(),RED.user.init(),RED.library.init(),RED.keyboard.init(),RED.palette.init(),!1!==RED.settings.theme("palette.editable")?RED.palette.editor.init():console.log("Palette editor disabled"),RED.sidebar.init(),RED.settings.theme("projects.enabled",!1)?RED.projects.init():console.log("Projects disabled"),RED.subflow.init(),RED.workspaces.init(),RED.clipboard.init(),RED.search.init(),RED.editor.init(),RED.diff.init(),RED.menu.init({id:"btn-sidemenu",options:e}),RED.deploy.init(RED.settings.theme("deployButton",null)),RED.notifications.init(),RED.actions.add("core:show-about",o),RED.nodes.init(),RED.comms.connect(),$("#main-container").show(),$(".header-toolbar").show(),$.ajax({headers:{Accept:"application/json"},cache:!1,url:"nodes",success:function(e){RED.nodes.setNodeList(e),RED.i18n.loadNodeCatalogs(function(){l(t)})}})}$(function(){"localhost"!==window.location.hostname&&"127.0.0.1"!==window.location.hostname&&(document.title=document.title+" : "+window.location.hostname),ace.require("ace/ext/language_tools"),RED.i18n.init(function(){RED.settings.init(e)})})}();